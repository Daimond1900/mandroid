UI设计的灵活性需求  -- UI fragment 与 fragment管理器

----引入fragment

理论部分：

    1.  activity 可以在运行时组装，甚至重新组装

    2.  采用fragment来管理页面UI，可以绕过activity使用规则限制

    3.  fragment是一种控制器对象，activity可委派它完成一些任务，这些任务通常就是管理用户界

        面，受管的用户界面可以是一整屏或是整屏的一部分

    4.  管理界面的fragment称为UI fragment ，它有自己的布局文件视图，

        activity视图上可以预留供fragment视图插入的位置

    5.  根据应用的需要，可以联合使用fragment及activity来组装用户界面

    6.  在整个生命周期过程中，activity在技术上保持不变
----------------------------------------------------------------------------------------------------
实战：
    1.  fragment需要有一个activity托管

            --托管：activity在其视图层预留一个位置给fragment视图

            --fragment自己不具备在屏幕上显示视图的能力

    2.  CrimeActivity 继承v4.FragmentActivity 用来托管UI fragment

        Crime类 数据模型

        托管 UI fragment，activity需要:
            1.  在其布局中预留fragment视图的位置

                    <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
                     android:id="@+id/fragment_container"
                     android:layout_width="match_parent"
                     android:layout_height="match_parent"/>


            2.  管理fragment实例的生命周期   --fragment需要相对应的生命周期方法来处理activity的工作

                    扩展fragment 的生命周期：
                        *** fragment生命周期与activity生命周期的一个关键区别就在于：
                            fragment的生命周期方法是由托管activity而不是操作系统调用
                            操作系统不关心activity用来管理视图的fragment。fragment的
                            使用是activity内部的事情
                        ***

            3.  托管的两种方式：
                    3.1 在activity布局中添加fragment

                            简单但不灵活，在activity布局中加入fragment，等同于绑在了一起，在activity生命
                            周期里面无法切换fragment

                    3.2 在activity代码中添加fragment

                            灵活，代码多，可以运行时控制fragment，可以自行决定何时添加fragment，做什么操作，
                            移除fragment

            4.  创建UI fragment
                    4.1 定义：CrimeFragment extends Fragment  -- UI fragment
                            这个CrimeFragment负责用户交互的页面

            5.  添加 UI fragment 到 FragmentManager

                    5.1 Activity类中相应添加了FragmentManager类，FragmentManager类负责管理fragment

                        并将它们的视图添加到activity的视图层级结构中

                        FragmentManager类具体管理的是：
                            1. fragment队列
                            2. fragment事务回退栈

                    5.2 在CrimeActivity中
                            FragmentManager fm = getSupportFragmentManager();
                            Fragment fragment = fm.findFragmentById(R.id.fragment_container);
                            if (fragment == null) {
                                fragment = new CrimeFragment();
                                fm.beginTransaction()
                                    .add(R.id.fragment_container, fragment)
                                    .commit();
                            }

                            fragment事务被用来添加、移除、附加、分离或替换fragment队列中的fragment

                            activity的FragmentManager负责调用队列中fragment的生命周期方法
----------------------------------------------------------------------------------------------------
使用抽象的activity托管fragment：
    1.   抽象 activity 类： SingleFragmentActivity


